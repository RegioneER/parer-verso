/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2013.03.05 at 01:48:42 PM CET
//

package net.datasiel.par.jaxb.datispecifici;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * net.datasiel.par.jaxb.datispecifici package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content.
 * The Java representation of XML content can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in
 * this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DatiSpecifici_QNAME = new QName("", "DatiSpecifici");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
     * net.datasiel.par.jaxb.datispecifici
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DatiSpecificiType }
     *
     */
    public DatiSpecificiType createDatiSpecificiType() {
        return new DatiSpecificiType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatiSpecificiType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "DatiSpecifici")
    public JAXBElement<DatiSpecificiType> createDatiSpecifici(DatiSpecificiType value) {
        return new JAXBElement<DatiSpecificiType>(_DatiSpecifici_QNAME, DatiSpecificiType.class, null, value);
    }

}
